<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scccy.stgy.model.mapper.ApartmentInfoMapper">
  <resultMap id="BaseResultMap" type="com.scccy.stgy.model.domain.ApartmentInfo">
    <!--@mbg.generated-->
    <!--@Table apartment_info-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="district_id" jdbcType="BIGINT" property="districtId" />
    <result column="district_name" jdbcType="VARCHAR" property="districtName" />
    <result column="city_id" jdbcType="BIGINT" property="cityId" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="province_id" jdbcType="BIGINT" property="provinceId" />
    <result column="province_name" jdbcType="VARCHAR" property="provinceName" />
    <result column="address_detail" jdbcType="VARCHAR" property="addressDetail" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="is_release" jdbcType="TINYINT" property="isRelease" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, introduction, district_id, district_name, city_id, city_name, province_id, 
    province_name, address_detail, latitude, longitude, phone, is_release, create_time, 
    update_time, is_deleted
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update apartment_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="introduction = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.introduction,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="district_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.districtId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="district_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.districtName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="city_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.cityId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="city_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.cityName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="province_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.provinceId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="province_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.provinceName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="address_detail = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.addressDetail,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="latitude = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.latitude,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="longitude = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.longitude,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.phone,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="is_release = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
            when id = #{item.id,jdbcType=BIGINT} then #{item.isRelease,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="is_deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.deleted,jdbcType=TINYINT}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into apartment_info
    (`name`, introduction, district_id, district_name, city_id, city_name, province_id, 
      province_name, address_detail, latitude, longitude, phone, is_release, create_time, 
      update_time, is_deleted)
    values
    <foreach collection="list" item="item" separator=",">
        (#{item.name,jdbcType=VARCHAR}, #{item.introduction,jdbcType=VARCHAR}, #{item.districtId,jdbcType=BIGINT},
        #{item.districtName,jdbcType=VARCHAR}, #{item.cityId,jdbcType=BIGINT}, #{item.cityName,jdbcType=VARCHAR},
        #{item.provinceId,jdbcType=BIGINT}, #{item.provinceName,jdbcType=VARCHAR},
        #{item.addressDetail,jdbcType=VARCHAR},
        #{item.latitude,jdbcType=VARCHAR}, #{item.longitude,jdbcType=VARCHAR}, #{item.phone,jdbcType=VARCHAR},
        #{item.isRelease,jdbcType=TINYINT}, #{item.createTime,jdbcType=TIMESTAMP},
        #{item.updateTime,jdbcType=TIMESTAMP},
        #{item.deleted,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.scccy.stgy.model.domain.ApartmentInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into apartment_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      `name`,
      introduction,
      district_id,
      district_name,
      city_id,
      city_name,
      province_id,
      province_name,
      address_detail,
      latitude,
      longitude,
      phone,
      is_release,
      create_time,
      update_time,
      is_deleted,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
        #{name,jdbcType=VARCHAR},
        #{introduction,jdbcType=VARCHAR},
        #{districtId,jdbcType=BIGINT},
        #{districtName,jdbcType=VARCHAR},
        #{cityId,jdbcType=BIGINT},
        #{cityName,jdbcType=VARCHAR},
        #{provinceId,jdbcType=BIGINT},
        #{provinceName,jdbcType=VARCHAR},
        #{addressDetail,jdbcType=VARCHAR},
        #{latitude,jdbcType=VARCHAR},
        #{longitude,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR},
        #{isRelease,jdbcType=TINYINT},
        #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP},
        #{deleted,jdbcType=TINYINT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
        `name` = #{name,jdbcType=VARCHAR},
        introduction = #{introduction,jdbcType=VARCHAR},
        district_id = #{districtId,jdbcType=BIGINT},
        district_name = #{districtName,jdbcType=VARCHAR},
        city_id = #{cityId,jdbcType=BIGINT},
        city_name = #{cityName,jdbcType=VARCHAR},
        province_id = #{provinceId,jdbcType=BIGINT},
        province_name = #{provinceName,jdbcType=VARCHAR},
        address_detail = #{addressDetail,jdbcType=VARCHAR},
        latitude = #{latitude,jdbcType=VARCHAR},
        longitude = #{longitude,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        is_release = #{isRelease,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        is_deleted = #{deleted,jdbcType=TINYINT},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.scccy.stgy.model.domain.ApartmentInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into apartment_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="districtId != null">
        district_id,
      </if>
      <if test="districtName != null">
        district_name,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="cityName != null">
        city_name,
      </if>
      <if test="provinceId != null">
        province_id,
      </if>
      <if test="provinceName != null">
        province_name,
      </if>
      <if test="addressDetail != null">
        address_detail,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="isRelease != null">
        is_release,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        is_deleted,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="districtId != null">
        #{districtId,jdbcType=BIGINT},
      </if>
      <if test="districtName != null">
        #{districtName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=BIGINT},
      </if>
      <if test="cityName != null">
        #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null">
        #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="provinceName != null">
        #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="addressDetail != null">
        #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isRelease != null">
          #{isRelease,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="districtId != null">
        district_id = #{districtId,jdbcType=BIGINT},
      </if>
      <if test="districtName != null">
        district_name = #{districtName,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="cityName != null">
        city_name = #{cityName,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null">
        province_id = #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="provinceName != null">
        province_name = #{provinceName,jdbcType=VARCHAR},
      </if>
      <if test="addressDetail != null">
        address_detail = #{addressDetail,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isRelease != null">
          is_release = #{isRelease,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        is_deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>

  <select id="pageItem" resultType="com.scccy.stgy.model.vo.ApartmentPageItemVo">
    select ai.id,
           ai.name,
           ai.introduction,
           ai.district_id,
           ai.district_name,
           ai.city_id,
           ai.city_name,
           ai.province_id,
           ai.province_name,
           ai.address_detail,
           ai.latitude,
           ai.longitude,
           ai.phone,
           ai.is_release,
           ai.create_time,
           ai.update_time,
           ai.is_deleted,
           count(ri.id) as totalRoomCount,
           SUM(IF(la.status NOT IN (1, 2), 0, 1)) as freeRoomCount
    from apartment_info ai
           left join room_info ri on ri.apartment_id = ai.id and ri.is_deleted = 0
           left join lease_agreement la on la.apartment_id = ai.id and la.is_deleted = 0 and la.room_id = ri.id
      <where>
        ai.is_deleted = 0
        <if test="apartmentPageItemDto.cityId != null and apartmentPageItemDto.cityId != ''">
          AND ai.city_id = #{apartmentPageItemDto.cityId}
        </if>
        <if test="apartmentPageItemDto.provinceId != null and apartmentPageItemDto.provinceId != ''">
          AND ai.province_id = #{apartmentPageItemDto.provinceId}
        </if>
        <if test="apartmentPageItemDto.districtId != null and apartmentPageItemDto.provinceId != ''">
          AND ai.district_id = #{apartmentPageItemDto.districtId}
        </if>
      </where>
    group by ai.id, ai.name, ai.introduction, ai.district_id, ai.district_name, ai.city_id, ai.city_name, ai.province_id,
             ai.province_name, ai.address_detail, ai.latitude, ai.longitude, ai.phone, ai.is_release, ai.create_time,
             ai.update_time, ai.is_deleted
  </select>
</mapper>