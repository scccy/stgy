<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scccy.stgy.model.mapper.RoomInfoMapper">
  <resultMap id="BaseResultMap" type="com.scccy.stgy.model.domain.RoomInfo">
    <!--@mbg.generated-->
    <!--@Table room_info-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="room_number" jdbcType="VARCHAR" property="roomNumber" />
    <result column="rent" jdbcType="DECIMAL" property="rent" />
    <result column="apartment_id" jdbcType="BIGINT" property="apartmentId" />
    <result column="is_release" jdbcType="TINYINT" property="release" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, room_number, rent, apartment_id, is_release, create_time, update_time, is_deleted
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update room_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="room_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.roomNumber,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="rent = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.rent,jdbcType=DECIMAL}
        </foreach>
      </trim>
      <trim prefix="apartment_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.apartmentId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="is_release = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.release,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="is_deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.deleted,jdbcType=TINYINT}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into room_info
    (room_number, rent, apartment_id, is_release, create_time, update_time, is_deleted
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.roomNumber,jdbcType=VARCHAR}, #{item.rent,jdbcType=DECIMAL}, #{item.apartmentId,jdbcType=BIGINT}, 
        #{item.release,jdbcType=TINYINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.deleted,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.scccy.stgy.model.domain.RoomInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into room_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      room_number,
      rent,
      apartment_id,
      is_release,
      create_time,
      update_time,
      is_deleted,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{roomNumber,jdbcType=VARCHAR},
      #{rent,jdbcType=DECIMAL},
      #{apartmentId,jdbcType=BIGINT},
      #{release,jdbcType=TINYINT},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{deleted,jdbcType=TINYINT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      room_number = #{roomNumber,jdbcType=VARCHAR},
      rent = #{rent,jdbcType=DECIMAL},
      apartment_id = #{apartmentId,jdbcType=BIGINT},
      is_release = #{release,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{deleted,jdbcType=TINYINT},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.scccy.stgy.model.domain.RoomInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into room_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roomNumber != null">
        room_number,
      </if>
      <if test="rent != null">
        rent,
      </if>
      <if test="apartmentId != null">
        apartment_id,
      </if>
      <if test="release != null">
        is_release,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        is_deleted,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roomNumber != null">
        #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        #{rent,jdbcType=DECIMAL},
      </if>
      <if test="apartmentId != null">
        #{apartmentId,jdbcType=BIGINT},
      </if>
      <if test="release != null">
        #{release,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="roomNumber != null">
        room_number = #{roomNumber,jdbcType=VARCHAR},
      </if>
      <if test="rent != null">
        rent = #{rent,jdbcType=DECIMAL},
      </if>
      <if test="apartmentId != null">
        apartment_id = #{apartmentId,jdbcType=BIGINT},
      </if>
      <if test="release != null">
        is_release = #{release,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        is_deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>

  <resultMap autoMapping="true" id="getRoomPageItemMap" type="com.scccy.stgy.model.vo.RoomPageItemVo">
    <id column="id" property="id" />
    <association autoMapping="true" javaType="com.scccy.stgy.model.domain.ApartmentInfo" property="apartmentInfo">
      <id column="apart_id" property="id" />
      <result column="apart_is_release" property="isRelease" />
    </association>
  </resultMap>
  <select id="getRoomPageItem" resultMap="getRoomPageItemMap">
      select ri.id,
             ri.room_number,
             ri.rent,
             ri.apartment_id,
             ri.is_release,
             la.room_id is not null is_check_in,
             la.lease_end_date,
             ai.id                  apart_id,
             ai.name,
             ai.introduction,
             ai.district_id,
             ai.district_name,
             ai.city_id,
             ai.city_name,
             ai.province_id,
             ai.province_name,
             ai.address_detail,
             ai.latitude,
             ai.longitude,
             ai.phone,
             ai.is_release          apart_is_release
      from room_info ri
               left join lease_agreement la
                         on ri.id = la.room_id
                             and la.is_deleted = 0
                             and la.status in (2, 5)
               left join apartment_info ai
                         on ri.apartment_id = ai.id
                             and ai.is_deleted = 0
      <where>
          ri.is_deleted = 0
          <if test="provinceId != null">
              AND ai.province_id = #{provinceId}
          </if>
          <if test="cityId != null">
              AND ai.city_id = #{cityId}
          </if>
          <if test="districtId != null">
              AND ai.district_id = #{districtId}
          </if>
          <if test="apartmentId != null">
              AND ri.apartment_id = #{apartmentId}
          </if>
      </where>
  </select>


  <resultMap autoMapping="true" id="RoomGetDetailByIdDtoMap" type="com.scccy.stgy.model.dto.RoomGetDetailByIdVo">
    <!-- 映射room_info表的字段 -->
    <id column="room_id" property="id"/>
    <result column="room_number" property="roomNumber"/>
    <result column="rent" property="rent"/>

    <!-- 映射apartment_info表的字段 -->
    <association autoMapping="true" property="apartmentInfo" javaType="com.scccy.stgy.model.domain.ApartmentInfo">
      <id column="apartment_id" property="id"/>
      <result column="apartment_name" property="name"/>
      <result column="introduction" property="introduction"/>
      <!-- 其他字段的映射 -->
    </association>

    <!-- 映射graph_info表的字段 -->
    <collection autoMapping="true" property="graphVoList" ofType="com.scccy.stgy.model.domain.GraphInfo">
      <id column="id" property="id"/>
      <result column="name" property="name"/>
      <result column="url" property="url"/>
      <!-- 其他字段的映射 -->
    </collection>



    <!-- 映射label_info表的字段 -->
    <collection autoMapping="true" property="labelInfoList" ofType="com.scccy.stgy.model.domain.LabelInfo">
      <id column="label_id" property="id"/>
      <result column="label_type" property="type"/>
      <result column="label_name" property="name"/>
      <!-- 其他字段的映射 -->
    </collection>

    <!-- 映射payment_type表的字段 -->
    <collection autoMapping="true"  property="paymentTypeList" ofType="com.scccy.stgy.model.domain.PaymentType">
      <id column="payment_type_id" property="id"/>
      <result column="payment_type_name" property="name"/>
      <result column="payment_type_pay_month_count" property="payMonthCount"/>
      <result column="payment_type_additional_info" property="additionalInfo"/>
      <!-- 其他字段的映射 -->
    </collection>

    <!-- 映射lease_term表的字段 -->
    <collection autoMapping="true" property="leaseTermList" ofType="com.scccy.stgy.model.domain.LeaseTerm">
      <id column="lease_term_id" property="id"/>
      <result column="lease_term_month_count" property="monthCount"/>
      <result column="lease_term_unit" property="unit"/>
      <!-- 其他字段的映射 -->
    </collection>
  </resultMap>


  <select id="getDetailById" resultMap="RoomGetDetailByIdDtoMap">
    SELECT ri.id              AS room_id,
           ri.room_number,
           ri.rent,
           ai.id              AS apartment_id,
           ai.name            AS apartment_name,
           ai.introduction    AS introduction,
           ai.district_id     AS district_id,
           ai.district_name   AS district_name,
           ai.city_id         AS city_id,
           ai.city_name       AS city_name,
           ai.province_id     AS province_id,
           ai.province_name   AS province_name,
           ai.address_detail  AS address_detail,
           ai.latitude        AS latitude,
           ai.longitude       AS longitude,
           ai.phone           AS phone,
           ai.is_release      AS is_release,
           gi.id              AS id,
           gi.name            AS name,
           gi.url             AS url,
           av.id              AS attribute_value_id,
           av.name            AS attribute_value_name,
           ak.id              AS attribute_key_id,
           ak.name            AS attribute_key_name,
           li.id              AS label_id,
           li.type            AS label_type,
           li.name            AS label_name,
           pt.id              AS payment_type_id,
           pt.name            AS payment_type_name,
           pt.pay_month_count AS payment_type_pay_month_count,
           pt.additional_info AS payment_type_additional_info,
           lt.id              AS lease_term_id,
           lt.month_count     AS lease_term_month_count,
           lt.unit            AS lease_term_unit
    FROM room_info ri
           LEFT JOIN
         apartment_info ai ON ri.apartment_id = ai.id AND ai.is_deleted = 0
           LEFT JOIN
         graph_info gi ON ri.id = gi.item_id AND gi.is_deleted = 0
           LEFT JOIN
         room_attr_value rav ON ri.id = rav.room_id AND rav.is_deleted = 0
           LEFT JOIN
         attr_value av ON rav.attr_value_id = av.id AND av.is_deleted = 0
           LEFT JOIN
         attr_key ak ON av.attr_key_id = ak.id AND ak.is_deleted = 0
           LEFT JOIN
         room_facility rf ON ri.id = rf.room_id AND rf.is_deleted = 0
           LEFT JOIN
         facility_info fi ON rf.facility_id = fi.id AND fi.is_deleted = 0
           LEFT JOIN
         room_label rl ON ri.id = rl.room_id AND rl.is_deleted = 0
           LEFT JOIN
         label_info li ON rl.label_id = li.id AND li.is_deleted = 0
           LEFT JOIN
         room_payment_type rpt ON ri.id = rpt.room_id AND rpt.is_deleted = 0
           LEFT JOIN
         payment_type pt ON rpt.payment_type_id = pt.id AND pt.is_deleted = 0
           LEFT JOIN
         room_lease_term rlt ON rlt.room_id = ri.id
           LEFT JOIN
         lease_term lt ON rlt.lease_term_id = lt.id AND lease_term_id = 0
    WHERE ri.is_deleted = 0
      AND ri.id = #{id}
  </select>
</mapper>